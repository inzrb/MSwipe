{
  "name": "grunt-cmd-transport",
  "description": "Transport javascript into cmd.",
  "version": "0.4.1",
  "homepage": "https://github.com/spmjs/grunt-cmd-transport",
  "author": {
    "name": "Hsiaoming Yang",
    "email": "lepture@me.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/spmjs/grunt-cmd-transport.git"
  },
  "bugs": {
    "url": "https://github.com/spmjs/grunt-cmd-transport/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/spmjs/grunt-cmd-transport/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "clean-css": "~1.0.1",
    "cmd-util": "~0.3.5",
    "handlebars": "1.0.11",
    "uglify-js": "~2.2.5",
    "css": "~1.4.0"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-mocha-test": "~0.4.0",
    "should": "~1.2.2",
    "grunt-cli": "~0.1.9"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-cmd-transport\n\n> Transport javascript into cmd.\n\n## Getting Started\n\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-cmd-transport --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-cmd-transport');\n```\n\n## The \"transport\" task\n\n### Overview\n\nIn your project's Gruntfile, add a section named `cmd_transport` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  transport: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.paths\n\nType: `Array`\nDefault value: `['sea-modules']`\n\nWhere are the modules in the sea.\n\n#### options.idleading\n\nType: `String`\nDefault value: `\"\"`\n\nPrepend idleading to generate the id of the module.\n\n#### options.alias\n\nType: `Object`\nDefault value: `{}`\n\nAlias of modules.\n\n#### options.debug\n\nType: `Boolean`\nDefault value: `true`\n\nCreate a debugfile or not.\n\n#### options.handlebars\n\nType: `Object`\n\nOptions for handlebars compiler.\n\nConfigure handlebars ID:\n\n```js\noptions: {\n    handlebars: {\n        id: 'handlebars'\n    }\n}\n```\n\n#### options.uglify\n\nType: `Object`\n\nUglify prettifier, you really don't have to change this value.\n\n\n#### options.parsers\n\nTransport a specific filetype with the right parser.\n\nYou can write your own parsers, for example `coffeeParser`:\n\n```js\noptions: {\n    parsers: {\n        '.coffee': [coffeeParser]\n    }\n}\n```\n\nSorry for the missing documentation on how to write a parser.\n\n### Usage Examples\n\nGruntfile use default options.\n\n\n```js\ngrunt.initConfig({\n    transport: {\n        target_name: {\n            files: [{\n                cwd: 'src',\n                src: '**/*',\n                dest: 'dist'\n            }]\n        }\n    }\n});\n```\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n**Dec 4th, 2013** `0.4.0`\n\nfix Windows path #58\n\n**Oct 15th, 2013** `0.4.0`\n\n- delete hack for grunt file object #45 **not compatible**\n\n- resolve deps error if require file and folder with the same name #50\n\n**Sep 4th, 2013** `0.3.0`\n\nRemove styleBox id logic added in 0.2.12, now require outside css module do not adding to styleBox,\nthat resolve lots of bugs.\n\n**Sep 4th, 2013** `0.2.12`\n\nstyleBox css module should has styleBox id.\n\n**Oct 28st, 2013** `0.2.11`\n\nstylebox support array.\n\n**Oct 28st, 2013** `0.2.10`\n\nstylebox support :root selector\nsupport id/deps sepecified\ndon't resolve text!path/to/some.xx\n\n**Jul 1st, 2013** `0.2.9`\n\nfix deps duplicate\n\n**Jun 27th, 2013** `0.2.8`\n\n- improve parsing css\n- add testcase\n\n**Jun 26th, 2013** `0.2.7`\n\n- improve log\n- remove .js extname in dependencies\n- add styleBox option\n\n**Jun 19th, 2013** `0.2.6`\n\nShow parsing JS error log.\n\n**Jun 17th, 2013** `0.2.5`\n\nHandlebars ID configurable.\n\nBugfix for not showing JS parse error.\n\n**May 28th, 2013** `0.2.4`\n\nUse a specified version of Handlebars.\n\n**May 6th, 2013** `0.2.3\n\nDon't stop the process when the file not exists.\n\n**April 25th, 2013** `0.2.2`\n\nFix on filter id.\n\n**April 15th, 2013** `0.2.1`\n\nRestore tplParser.\n\n**April 11th, 2013** `0.2.0`\n\nChanged the option configuration.\n\n**April 10th, 2013** `0.1.3`\n\nUpgrade dependencies.\n\n**April 9th, 2013** `0.1.2`\n\nBugfix for parsing nested relative dependencies.\n\n**April 1st, 2013** `0.1.1`\n\nTemplate process on source data.\n\n**April 1st, 2013** `0.1.0`\n\nFirst version.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-cmd-transport@0.4.1",
  "dist": {
    "shasum": "128069ecb3cbe5f84214f87b137663e25595e575",
    "tarball": "http://npm.oa.com/grunt-cmd-transport/-/grunt-cmd-transport-0.4.1.tgz"
  },
  "_from": "grunt-cmd-transport@~0.4.0",
  "_npmVersion": "1.2.22",
  "_npmUser": {
    "name": "popomore",
    "email": "sakura9515@gmail.com"
  },
  "maintainers": [
    {
      "name": "lepture",
      "email": "lepture@me.com"
    },
    {
      "name": "popomore",
      "email": "sakura9515@gmail.com"
    },
    {
      "name": "afc163",
      "email": "afc163@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "128069ecb3cbe5f84214f87b137663e25595e575",
  "_resolved": "http://npm.oa.com/grunt-cmd-transport/-/grunt-cmd-transport-0.4.1.tgz"
}
